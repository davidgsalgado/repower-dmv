datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String @id @default(cuid())
  email String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password Password?
  notes    Note[]
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Note {
  id    String @id @default(cuid())
  title String
  body  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String
}

model Contractor {
  id               String           @id @default(uuid())
  name             String
  email            String
  phone            String
  websiteURL       String?
  address          String?
  numberOfReviews  Int?
  
  certifications   Certification[]
  services         Service[]
  statesServed     StatesServed[]
}

model Certification {
  id              Int        @id @default(autoincrement())
  contractorId    String
  certificationName String
  
  contractor      Contractor @relation(fields: [contractorId], references: [id], onDelete: Cascade)
  
  @@unique([contractorId, certificationName])
}

model Service {
  id              Int        @id @default(autoincrement())
  contractorId    String
  serviceName     String
  
  contractor      Contractor @relation(fields: [contractorId], references: [id], onDelete: Cascade)
  
  @@unique([contractorId, serviceName])
}

model StatesServed {
  id              Int        @id @default(autoincrement())
  contractorId    String
  state           String
  
  contractor      Contractor @relation(fields: [contractorId], references: [id], onDelete: Cascade)
  
  @@unique([contractorId, state])
}